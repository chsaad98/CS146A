Java code:

import java.util.Arrays;
import java.util.PriorityQueue;
public class Solution {
    public int minMeetingRooms(int[][] intervals) {
        if (intervals == null || intervals.length == 0) return 0;
        
        Arrays.sort(intervals, (a, b)
        
        PriorityQueue<Integer> endTimes = new PriorityQueue<>();
        endTimes.add(intervals[0][1]);
        
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0] >= endTimes.peek()) {
                endTimes.poll();
            }
            endTimes.add(intervals[i][1]);
        }
        
        return endTimes.size();
    }
    public static void main(String[] args) {
        Solution solution = new Solution();
        
        int[][] intervals1 = {{0, 30}, {5, 10}, {15, 20}};
        int[][] intervals2 = {{0, 1}, {1, 2}, {2, 3}};
        
        System.out.println(solution.minMeetingRooms(intervals1));
        System.out.println(solution.minMeetingRooms(intervals2));
    }
}
